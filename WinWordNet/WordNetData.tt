<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE80" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>

<#
	System.Reflection.PropertyInfo[] piColl = this.HostTemplateProjectItem.GetType().GetProperties();
#>
	<#=this.HostTemplateProjectItem.Name#>
	<#=System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NamespaceHint")#>
<#+
        private DTE _hostDTE = null;
        private Solution _hostSolution = null;
        private ProjectItem _hostTemplateProjectItem = null;
        private Project _hostProject = null;

        public IServiceProvider HostServiceProvider { get { return this.Host as IServiceProvider; } }
        public ITextTemplatingEngineHost TextTemplatingEngineHost { get { return this.Host as Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost; } }

        public DTE HostDTE
        {
            get
            {
                if (this._hostDTE == null)
                    this._hostDTE = this.HostServiceProvider.GetService(typeof(DTE)) as DTE;

                return this._hostDTE;
            }
        }

        public Solution HostSolution
        {
            get
            {
                if (this._hostSolution == null)
                    this._hostSolution = this.HostDTE.Solution;

                return this._hostSolution;
            }
        }

        public ProjectItem HostTemplateProjectItem
        {
            get
            {
                if (this._hostTemplateProjectItem == null)
                    this._hostTemplateProjectItem = this.HostSolution.FindProjectItem(this.TextTemplatingEngineHost.TemplateFile);

                return this._hostTemplateProjectItem;
            }
        }

        public Project HostProject
        {
            get
            {
                if (this._hostProject == null)
                    this._hostProject = this.HostTemplateProjectItem.ContainingProject;

                return this._hostProject;
            }
        }
#>